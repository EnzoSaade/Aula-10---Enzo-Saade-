import streamlit as st
import random

# --- Configura√ß√µes do App (T√≠tulo e Layout) ---
st.set_page_config(
    page_title="Miss√£o Hokage Quiz",
    layout="centered",
    initial_sidebar_state="collapsed",
)

# --- Vari√°veis do Quiz ---
# Di√°logos no estilo Naruto
NARUTO_DIALOGUE = [
    "Acredite! Eu vou me tornar o Hokage!",
    "Eu n√£o vou fugir, nem vou voltar atr√°s na minha palavra! Este √© o meu jeito ninja!",
    "Se voc√™ n√£o gosta do seu destino, n√£o aceite. Em vez disso, tenha a coragem de mud√°-lo!",
    "Dattebayo! Vamos l√°, tente responder a mais uma!",
]

HOKAGE_GOAL = 3 # Pontos necess√°rios para se tornar Hokage

# Perguntas do Quiz
QUIZ_QUESTIONS = [
    {
        "pergunta": "O jutsu secreto do Naruto √© o Rasengan.",
        "resposta": False,
        "explica√ß√£o": "O **Jutsu Secreto** (ou exclusivo) do Naruto √© o **Jutsu Multiclones das Sombras** (Kage Bunshin no Jutsu), n√£o o Rasengan. O Rasengan √© um jutsu de Rank-A.",
    },
    {
        "pergunta": "Naruto Uzumaki se torna o S√©timo Hokage de Konoha.",
        "resposta": True,
        "explica√ß√£o": "Correto! Naruto realiza seu sonho e se torna o **S√©timo Hokage** (Nanadaime Hokage).",
    },
    {
        "pergunta": "O nome do sensei do Time 7 √© Jiraiya.",
        "resposta": False,
        "explica√ß√£o": "Errado! O sensei original do Time 7 era **Kakashi Hatake**. Jiraiya era um dos lend√°rios Sannin e tutor de Naruto.",
    },
    {
        "pergunta": "O dem√¥nio selado dentro de Naruto √© o Nove-Caudas (Kurama).",
        "resposta": True,
        "explica√ß√£o": "Exato! Kurama, a Raposa de Nove-Caudas, estava selado dentro do Naruto.",
    },
    {
        "pergunta": "O cl√£ Uchiha √© famoso por possuir o Byakugan.",
        "resposta": False,
        "explica√ß√£o": "O cl√£ Uchiha √© famoso por possuir o **Sharingan**. O Byakugan pertence ao cl√£ Hy≈´ga.",
    },
]

# Inicializa o estado de sess√£o
if 'score' not in st.session_state:
    st.session_state.score = 0
if 'question_index' not in st.session_state:
    st.session_state.question_index = 0
if 'quiz_started' not in st.session_state:
    st.session_state.quiz_started = False

# --- Fun√ß√µes de L√≥gica ---

def check_answer(user_answer, correct_answer, explanation):
    """Verifica a resposta, atualiza a pontua√ß√£o e exibe feedback."""
    current_index = st.session_state.question_index
    
    # Previne que o usu√°rio responda a mesma pergunta v√°rias vezes e ganhe pontos
    if 'answered_q' not in st.session_state or current_index != st.session_state.answered_q:
        
        st.session_state.answered_q = current_index

        if user_answer == correct_answer:
            st.session_state.score += 1
            st.success(f"**Certo!** üéâ Voc√™ marcou um ponto, Dattebayo!")
        else:
            st.error(f"**Errado!** üòî Ah, que pena! Mas n√£o desista!")
        
        st.info(f"**Explica√ß√£o:** {explanation}")
        st.session_state.show_next = True # Habilita o bot√£o 'Pr√≥
