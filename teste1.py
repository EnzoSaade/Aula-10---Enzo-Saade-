import streamlit as st
import time # Para simular o "efeito digitando"

# --- Configura√ß√£o da P√°gina e "Efeitos Especiais" ---
st.set_page_config(
    page_title="Consultor Jur√≠dico Criativo - LawUni",
    page_icon="‚öñÔ∏è",
    layout="wide", # Usa a largura total da tela
    initial_sidebar_state="expanded"
)

# Tema e Cores
st.markdown("""
<style>
.stApp {
    background-color: #f0f2f6; /* Cor de fundo suave */
}
/* Estilo para um banner/cabe√ßalho mais impactante */
.css-1avcm0c {
    background-color: #0e1117; /* Cor escura para o topo da sidebar (opcional) */
}
.big-font {
    font-size:30px !important;
    font-weight: bold;
    color: #4CAF50; /* Verde-Lei */
    text-shadow: 2px 2px 4px #000000; /* Efeito de sombra no texto */
}
</style>
""", unsafe_allow_html=True)

# --- Vari√°veis de Sess√£o para Di√°logo (Mant√©m o Hist√≥rico) ---
if "messages" not in st.session_state:
    st.session_state.messages = []

# --- T√≠tulo e Cabe√ßalho Criativo ---
st.markdown('<p class="big-font">‚öñÔ∏è Law-Bot: A Consulta Criativa com I.A. Jur√≠dica</p>', unsafe_allow_html=True)
st.subheader("Simula√ß√£o de Aplica√ß√£o para a Universidade de Direito")
st.markdown("---")

# --- Fun√ß√£o de Resposta do Bot (Onde a Criatividade Acontece) ---
def law_bot_response(prompt, area):
    """Gera uma resposta criativa e tem√°tica baseada na entrada e √°rea."""
    
    # Simula o processamento
    with st.spinner('Pensando como um juiz... üßë‚Äç‚öñÔ∏è'):
        time.sleep(1.5) 
    
    # Respostas baseadas no tema e √°rea
    if area == "Direito Penal":
        response = (
            f"Excelente quest√£o em **{area}**! Seu desafio me faz pensar no princ√≠pio da _interven√ß√£o m√≠nima_."
            " Seu caso gira em torno da **culpabilidade** ou da **ilicitude**? "
            "Para uma an√°lise criativa, imagine: Se o r√©u fosse um personagem de fic√ß√£o, qual seria seu dilema moral/legal?"
        )
    elif area == "Direito Civil/Contratos":
        response = (
            f"Uma disputa em **{area}** √© um jogo de equil√≠brio. O cerne aqui √© a **boa-f√© objetiva** e o _pacta sunt servanda_."
            " Voc√™ est√° buscando o cumprimento do contrato ou uma resolu√ß√£o por **onerosidade excessiva**? "
            "Pense fora da caixa: Que cl√°usula 'invis√≠vel' a equidade sugere neste caso?"
        )
    elif area == "Direito Constitucional":
        response = (
            f"Ah, **Direito Constitucional**, a base de tudo! Estamos tratando de um conflito de **direitos fundamentais** ou de uma quest√£o de **separa√ß√£o de Poderes**?"
            " A chave criativa √© a _pondera√ß√£o_."
            " Se voc√™ fosse o constituinte, qual emenda proporia para resolver este impasse?"
        )
    else:
        response = (
            "Compreendido. Sua quest√£o √© complexa e exige uma abordagem **multidisciplinar**."
            " Como um exerc√≠cio criativo, proponho: Qual seria a solu√ß√£o mais **justa**, mesmo que n√£o fosse a estritamente legal? "
            "O Direito, afinal, √© uma arte de concilia√ß√£o."
        )

    # Efeito de texto "digitando"
    with st.chat_message("assistant", avatar="ü§ñ"):
        full_response = ""
        message_placeholder = st.empty()
        for chunk in response.split():
            full_response += chunk + " "
            time.sleep(0.05)
            message_placeholder.markdown(full_response + "‚ñå")
        message_placeholder.markdown(full_response)
        
    return response

# --- Sidebar com Op√ß√µes Interativas (Efeito de Filtro) ---
with st.sidebar:
    st.title("üóÇÔ∏è Filtro de Caso")
    selected_area = st.selectbox(
        "Selecione a √Årea do Direito para Focar a An√°lise Criativa:",
        ("Direito Penal", "Direito Civil/Contratos", "Direito Constitucional", "Outras √Åreas/Geral"),
        index=0,
        help="O Law-Bot ajustar√° a linguagem e os conceitos."
    )
    st.markdown("---")
    st.info("Este √© um projeto acad√™mico de simula√ß√£o. N√£o substitui a consulta a um advogado real.")
    
# --- Di√°logo Interativo (Aplica√ß√µes de LLM/Chat) ---

# Exibe o hist√≥rico de mensagens
for message in st.session_state.messages:
    with st.chat_message(message["role"], avatar=message.get("avatar")):
        st.markdown(message["content"])

# Mensagem inicial, se for a primeira vez
if not st.session_state.messages:
    st.session_state.messages.append({"role": "assistant", "content": "Ol√°! Sou o Law-Bot ‚öñÔ∏è da sua universidade. Descreva seu dilema jur√≠dico para iniciarmos uma an√°lise criativa baseada em princ√≠pios.", "avatar": "ü§ñ"})
    with st.chat_message("assistant", avatar="ü§ñ"):
        st.markdown(st.session_state.messages[-1]["content"])


# Campo de entrada do usu√°rio
if prompt := st.chat_input("Descreva seu dilema legal..."):
    # Adiciona a mensagem do usu√°rio ao hist√≥rico
    st.session_state.messages.append({"role": "user", "content": prompt, "avatar": "üßë‚Äçüéì"})
    with st.chat_message("user", avatar="üßë‚Äçüéì"):
        st.markdown(prompt)

    # Obt√©m e exibe a resposta do Law-Bot
    law_bot_response(prompt, selected_area)
